Define a function, hello(). It prints out "Hi there!" and returns TRUE. It has no arguments.

# Define the function hello()
hello <- function() {
    print("Hi there!")
 return(TRUE)
}




# Call the function hello()
hello()

NEW - - - - - - - - - - - - - - - - - - - - - - - -
- - - - - - - - - - - - -Function, 2-args- - - - - - - - - - - - -
# Finish the pow_two() function
pow_two <- function(x, print_info=TRUE) {
  y <- x ^ 2
  if (print_info==TRUE) {
    print(paste(x, "to the power two equals", y))
  }
  return(y)
}
NEW - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -- - - -- - - - - - - -
- - - - - - - - - - - - - - - functin that takes one argument only- - - - - - - - - - - - - - - 
# The linkedin and facebook vectors have already been created for you

# Define the interpret function
interpret <- function(num_views) {
  if (num_views > 15) {
print( "You're popular!")
return(num_views)

  } else {
print("Try to be more visible!")
return(0)

  }
}

# Call the interpret function twice
interpret(linkedin[1])
interpret(facebook[2])
NEW - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -- - - -- - - - - - - -
- - - - - - - - - - - - - - - functin that calls another function - - - - - - - - - - - - - - - 
# Define the interpret_all() function
# views: vector with data to interpret
# return_sum: return total number of views on popular days?
interpret_all <- function(views, return_sum=TRUE) {
  count <- 0

  for (v in views) {
count=interpret(v)+count
  }

  if (return_sum==TRUE) {
return(count)
  } else {
return(NULL)
  }
}

# Call the interpret_all() function on both linkedin and facebook
interpret_all(linkedin)
interpret_all(facebook)
